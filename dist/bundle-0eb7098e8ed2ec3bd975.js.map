{"version":3,"sources":["webpack://artifical-life/./src/drawing.ts","webpack://artifical-life/./src/math-functions.ts","webpack://artifical-life/webpack/bootstrap","webpack://artifical-life/webpack/runtime/make namespace object","webpack://artifical-life/./src/main.ts"],"names":["red","green","blue","alpha","randRgb","Rgba","randInt","interpolate","other","t","this","normalise","limNumber","mutateRgb","value","randFloat","difference","Math","abs","MAX_DIF","width","height","node","document","createElement","ctx","getContext","Canvas","data","createImageData","setPixel","x","y","color","POINTER","update","putImageData","PixelsData","bottom","top","random","floor","from","to","arr","length","min","max","number","a","b","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","call","r","Symbol","toStringTag","Object","defineProperty","W","H","PX","sin","asin","cos","acos","tan","atan","hypot","round","rand","sqrt","cbrt","avg","args","reduce","onload","imgNode","querySelector","formulaInputNode","oninput","eval","minOutput","maxOutput","errOutput","canvas","imageSmoothingEnabled","pixels","formula","setInterval","results","Infinity","innerHTML","result","e","toString","B","normalizeNumber","drawImage"],"mappings":"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","file":"bundle-0eb7098e8ed2ec3bd975.js","sourcesContent":["import { randInt, interpolate, limNumber, randFloat } from \"./math-functions\";\r\n\r\nexport class Rgba {\r\n    private static readonly MAX_DIF = 255 * 4;\r\n    static randRgb(): Rgba {\r\n        return new Rgba(randInt(0, 256), randInt(0, 256), randInt(0, 256), 255);\r\n    }\r\n    constructor(\r\n        readonly red: number,\r\n        readonly green: number,\r\n        readonly blue: number,\r\n        readonly alpha: number\r\n    ) { }\r\n    interpolate(other: Rgba, t: number): Rgba {\r\n        return new Rgba(\r\n            interpolate(this.red, other.red, t),\r\n            interpolate(this.green, other.green, t),\r\n            interpolate(this.blue, other.blue, t),\r\n            interpolate(this.alpha, other.alpha, t)\r\n        );\r\n    }\r\n    normalise(): Rgba {\r\n        return new Rgba(\r\n            limNumber(0, 255, this.red),\r\n            limNumber(0, 255, this.green),\r\n            limNumber(0, 255, this.blue),\r\n            limNumber(0, 255, this.alpha)\r\n        );\r\n    }\r\n    mutateRgb(value: number): Rgba {\r\n        return new Rgba(\r\n            this.red + randFloat(-value, value),\r\n            this.green + randFloat(-value, value),\r\n            this.blue + randFloat(-value, value),\r\n            this.alpha\r\n        ).normalise();\r\n    }\r\n    difference(other: Rgba): number {\r\n        return ((\r\n            Math.abs(this.red - other.red) +\r\n            Math.abs(this.green - other.green) +\r\n            Math.abs(this.blue - other.blue) +\r\n            Math.abs(this.alpha - other.alpha)\r\n        ) / Rgba.MAX_DIF);\r\n    }\r\n}\r\n\r\nexport class Canvas {\r\n    readonly node: HTMLCanvasElement;\r\n    readonly ctx: CanvasRenderingContext2D;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        this.node = node || document.createElement(\"canvas\");\r\n        this.node.width = width;\r\n        this.node.height = height;\r\n        this.ctx = this.node.getContext(\"2d\") as CanvasRenderingContext2D;\r\n    }\r\n}\r\n\r\nexport class PixelsData extends Canvas {\r\n    readonly data: ImageData;\r\n    constructor(width: number, height: number, node?: HTMLCanvasElement) {\r\n        super(width, height, node);\r\n        this.data = this.ctx.createImageData(\r\n            this.node.width,\r\n            this.node.height\r\n        );\r\n    }\r\n    setPixel(x: number, y: number, color: Rgba) {\r\n        const POINTER = (y * this.data.width + x) * 4;\r\n        this.data.data[POINTER] = color.red;\r\n        this.data.data[POINTER + 1] = color.green;\r\n        this.data.data[POINTER + 2] = color.blue;\r\n        this.data.data[POINTER + 3] = color.alpha;\r\n    }\r\n    update() {\r\n        this.ctx.putImageData(this.data, 0, 0);\r\n        return this;\r\n    }\r\n}","export function* range(from: number, to: number) {\r\n    while (from < to) {\r\n        yield from++;\r\n    }\r\n}\r\n\r\nexport function randFloat(bottom: number, top: number) {\r\n    return Math.random() * (top - bottom) + bottom;\r\n}\r\n\r\nexport function randInt(bottom: number, top: number) {\r\n    return Math.floor(randFloat(bottom, top));\r\n}\r\n\r\nexport function randChoice<T>(arr: T[]): T {\r\n    return arr[randInt(0, arr.length)];\r\n}\r\n\r\nexport function fixNumber(min: number, max: number, number: number): number {\r\n    return number >= min ? number % max : max - (-number % max);\r\n}\r\n\r\nexport function normalizeNumber(\r\n    min: number,\r\n    max: number,\r\n    number: number\r\n): number {\r\n    return (number - min) / (max - min);\r\n}\r\n\r\nexport function limNumber(min: number, max: number, number: number): number {\r\n    return Math.max(Math.min(number, max), min);\r\n}\r\n\r\nexport function interpolate(a: number, b: number, t: number): number {\r\n    return a + (b - a) * t;\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.css';\r\n\r\nimport { Canvas, PixelsData, Rgba } from \"./drawing\";\r\nimport { normalizeNumber } from \"./math-functions\";\r\n\r\nconst W = 256;\r\nconst H = 256;\r\nconst PX = 2;\r\n\r\nconst sin = Math.sin;\r\nconst asin = Math.asin;\r\nconst cos = Math.cos;\r\nconst acos = Math.acos;\r\nconst tan = Math.tan;\r\nconst atan = Math.atan;\r\nconst hypot = Math.hypot;\r\nconst round = Math.round;\r\nconst rand = Math.random;\r\nconst abs = Math.abs;\r\nconst sqrt = Math.sqrt;\r\nconst cbrt = Math.cbrt;\r\n\r\nconst avg = (...args: number[]) => args.reduce((a, b) => a + b) / args.length;\r\n\r\nonload = () => {\r\n\r\n    const imgNode = document.querySelector<HTMLCanvasElement>('#img')!;\r\n    const formulaInputNode = document.querySelector<HTMLInputElement>('#formula')!;\r\n    formulaInputNode.oninput = () => {\r\n        eval(`formula = (x, y) => ${formulaInputNode.value}`);\r\n        t = 0;\r\n    };\r\n    const minOutput = document.querySelector('#min')!;\r\n    const maxOutput = document.querySelector('#max')!;\r\n    const errOutput = document.querySelector('#err')!;\r\n\r\n    const canvas = new Canvas(\r\n        W * PX,\r\n        H * PX,\r\n        imgNode\r\n    );\r\n\r\n    canvas.ctx.imageSmoothingEnabled = false;\r\n\r\n    const pixels = new PixelsData(W, H);\r\n\r\n    let formula: (x: number, y: number, t: number) => number;\r\n\r\n    eval(`formula = (x, y, t) => ${formulaInputNode.value}`);\r\n\r\n    let t = 0;\r\n    setInterval(() => {\r\n\r\n        const results: number[][] = [];\r\n\r\n        let min = Infinity;\r\n        let max = -Infinity;\r\n\r\n        try {\r\n            errOutput.innerHTML = '';\r\n            for (let x = 0; x < W; x++) {\r\n                results[x] = [];\r\n                for (let y = 0; y < H; y++) {\r\n                    const result = formula(x - W / 2, y - H / 2, t);\r\n                    results[x][y] = result;\r\n                    min = Math.min(min, result);\r\n                    max = Math.max(max, result);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            errOutput.innerHTML = e;\r\n        }\r\n\r\n        minOutput.innerHTML = min.toString();\r\n        maxOutput.innerHTML = max.toString();\r\n\r\n        for (let x = 0; x < W; x++) {\r\n            for (let y = 0; y < H; y++) {\r\n                const B = normalizeNumber(min, max, results[x][y]);\r\n                pixels.setPixel(x, y, new Rgba(0, 0, 0, 255).interpolate(new Rgba(255, 255, 255, 255), B));\r\n            }\r\n        }\r\n\r\n        pixels.update();\r\n        canvas.ctx.drawImage(\r\n            pixels.node,\r\n            0,\r\n            0,\r\n            canvas.node.width, canvas.node.height\r\n        );\r\n\r\n        t += 1;\r\n    });\r\n\r\n};"],"sourceRoot":""}